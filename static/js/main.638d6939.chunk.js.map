{"version":3,"sources":["redux/transactions/transactions.actions.js","redux/transactions/transactions.operations.js","redux/transactions/transactions.selectors.js","redux/transactions/transactions.reducer.js","components/AddTransaction/AddTransaction.jsx","views/HomeView.js","components/CategoriesTable/CategoriesTable.jsx","views/CategoriesView.js","components/TransactionsTable/TransactionsTable.jsx","views/TransactionsView.js","components/routes.js","components/Nav/Nav.jsx","components/AppBar/AppBar.jsx","App.js","redux/store.js","index.js"],"names":["fetchTransactionsRequest","createAction","fetchTransactionsSuccess","fetchTransactionsError","addTransactionRequest","addTransactionSuccess","addTransactionError","deleteTransactionRequest","deleteTransactionSuccess","deleteTransactionError","transactionsSummaryRequest","transactionsSummarySuccess","transactionsSummaryError","filterTransactions","axios","defaults","baseURL","process","fetchTransactions","dispatch","a","transactionsActions","get","data","message","console","log","addTransaction","datetime","category","operationType","amount","description","transaction","post","deleteTransaction","transactionId","delete","getLoading","state","transactions","loading","getFilter","filter","getAllTransactions","items","getVisibleTransactions","createSelector","normalizedFilter","toLowerCase","item","includes","getIncomeSum","reduce","acc","getTransactionById","id","find","_id","createReducer","_","payload","result","isLoadingAction","action","type","startsWith","endsWith","isEndLoadingAction","builder","addMatcher","transactionsReducer","combineReducers","AddTransaction","useDispatch","useState","Date","setDatetime","setCategory","setOperationType","setAmount","setDescription","handleChange","useCallback","e","currentTarget","name","value","warn","handleSubmit","preventDefault","transactionsOperations","className","onSubmit","onChange","placeholder","autoComplete","max","min","pattern","selected","dateFormat","customInput","Home","CategoriesTable","useSelector","transactionsSelectors","onDeleteTransaction","map","onClick","Categories","TransactionsTable","moment","format","Transactions","routes","home","categories","Nav","activeClassName","exact","to","path","component","HomeView","CategoriesView","TransactionsView","AppBar","App","useEffect","store","configureStore","reducer","devTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.638d6939.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchTransactionsRequest = createAction('transactions/fetchTransactionsRequest');\r\nexport const fetchTransactionsSuccess = createAction('transactions/fetchTransactionsSuccess');\r\nexport const fetchTransactionsError = createAction('transactions/fetchTransactionsError');\r\n\r\nexport const addTransactionRequest = createAction('transactions/addTransactionRequest');\r\nexport const addTransactionSuccess = createAction('transactions/addTransactionSuccess');\r\nexport const addTransactionError = createAction('transactions/addTransactionError');\r\n\r\nexport const deleteTransactionRequest = createAction('transactions/deleteTransactionRequest');\r\nexport const deleteTransactionSuccess = createAction('transactions/deleteTransactionSuccess');\r\nexport const deleteTransactionError = createAction('transactions/deleteTransactionError');\r\n\r\nexport const transactionsSummaryRequest = createAction('transactions/transactionsSummaryRequest');\r\nexport const transactionsSummarySuccess = createAction('transactions/transactionsSummarySuccess');\r\nexport const transactionsSummaryError = createAction('transactions/transactionsSummaryError');\r\n\r\nexport const filterTransactions = createAction('transactions/filter');\r\n","import axios from 'axios';\r\nimport { transactionsActions } from './index';\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_SERVER_URL;\r\n\r\nexport const fetchTransactions = () => async dispatch => {\r\n  dispatch(transactionsActions.fetchTransactionsRequest());\r\n  try {\r\n    const { data } = await axios.get(`/api/transactions`);\r\n    dispatch(transactionsActions.fetchTransactionsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(transactionsActions.fetchTransactionsError(error.message));\r\n    console.log(error.message);\r\n  }\r\n};\r\n\r\nexport const addTransaction =\r\n  ({ datetime, category, operationType, amount, description }) =>\r\n  async dispatch => {\r\n    const transaction = {\r\n      datetime,\r\n      category,\r\n      operationType,\r\n      amount,\r\n      description,\r\n    };\r\n\r\n    dispatch(transactionsActions.addTransactionRequest());\r\n\r\n    try {\r\n      const { data } = await axios.post('/api/transactions', transaction);\r\n      dispatch(transactionsActions.addTransactionSuccess(data));\r\n    } catch (error) {\r\n      dispatch(transactionsActions.addTransactionError(error.message));\r\n    }\r\n  };\r\n\r\nexport const deleteTransaction = transactionId => async dispatch => {\r\n  dispatch(transactionsActions.deleteTransactionRequest());\r\n\r\n  try {\r\n    await axios.delete(`/api/transactions/${transactionId}`);\r\n    dispatch(transactionsActions.deleteTransactionSuccess(transactionId));\r\n  } catch (error) {\r\n    dispatch(transactionsActions.deleteTransactionError(error.message));\r\n  }\r\n};\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getLoading = state => state.transactions.loading;\r\n\r\nexport const getFilter = state => state.transactions.filter;\r\n\r\nexport const getAllTransactions = state => state.transactions.items;\r\n\r\nexport const getVisibleTransactions = createSelector(\r\n  [getAllTransactions, getFilter],\r\n  (transactions, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return transactions.filter(({ item }) =>\r\n      item.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);\r\n\r\nexport const getIncomeSum = createSelector([getAllTransactions], transactions =>\r\n  transactions.reduce((acc, transaction) => acc + transaction.amount, 0),\r\n);\r\n\r\nexport const getTransactionById = id =>\r\n  createSelector([getAllTransactions], transactions =>\r\n    transactions.find(transaction => transaction._id === id),\r\n  );\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport * as transactionsActions from './transactions.actions';\r\n\r\nconst items = createReducer([], {\r\n  [transactionsActions.fetchTransactionsSuccess]: (_, { payload }) =>\r\n    payload.transactions,\r\n\r\n  [transactionsActions.addTransactionSuccess]: (state, { payload }) => [\r\n    payload.result,\r\n    ...state,\r\n  ],\r\n\r\n  [transactionsActions.deleteTransactionSuccess]: (state, { payload }) =>\r\n    state.filter(transaction => transaction._id !== payload),\r\n});\r\n\r\nconst isLoadingAction = action =>\r\n  action.type.startsWith('transactions') && action.type.endsWith('Request');\r\n\r\nconst isEndLoadingAction = action =>\r\n  action.type.startsWith('transactions') &&\r\n  (action.type.endsWith('Success') || action.type.endsWith('Error'));\r\n\r\nconst loading = createReducer(false, builder => {\r\n  builder\r\n    .addMatcher(isLoadingAction, () => true)\r\n    .addMatcher(isEndLoadingAction, () => false);\r\n});\r\n\r\nexport const transactionsReducer = combineReducers({\r\n  items,\r\n  loading,\r\n});\r\n","import React, { useState, useCallback } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\nimport { transactionsOperations } from '../../redux/transactions';\r\n\r\nconst AddTransaction = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [datetime, setDatetime] = useState(new Date());\r\n  const [category, setCategory] = useState(\"\");\r\n  const [operationType, setOperationType] = useState(\"\");\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  const handleChange = useCallback((e) => {\r\n    const { name, value } = e.currentTarget;\r\n    console.log(e.currentTarget);\r\n\r\n    switch (name) {\r\n      case 'category':\r\n        setCategory(value);\r\n        break;\r\n\r\n      case 'operationType':\r\n        setOperationType(value);\r\n        break;\r\n\r\n      case 'amount':\r\n        setAmount(value);\r\n        break;\r\n\r\n      case 'description':\r\n        setDescription(value);\r\n        break;\r\n\r\n      default:\r\n        console.warn(`Тип поля ${name} не валідний`);\r\n    }\r\n  }, []);\r\n\r\n\r\n  const reset = () => {\r\n    setCategory(\"\");\r\n    setOperationType(\"\");\r\n    setAmount(\"\");\r\n    setDescription(\"\");\r\n  };\r\n\r\n  const handleSubmit = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      dispatch(\r\n        transactionsOperations.addTransaction({\r\n          datetime,\r\n          category,\r\n          operationType,\r\n          amount,\r\n          description\r\n        })\r\n      );\r\n      reset();\r\n    },\r\n    [dispatch,\r\n      datetime,\r\n      category,\r\n      operationType,\r\n      amount,\r\n      description]\r\n  );\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form  className=\"form\" onSubmit={handleSubmit}>\r\n        <input type=\"text\"\r\n          name=\"category\"\r\n          value={category}\r\n          onChange={handleChange}\r\n          placeholder=\"Категорія\"\r\n          autoComplete=\"off\"\r\n        />\r\n        <input type=\"text\"\r\n          name=\"operationType\"\r\n          value={operationType}\r\n          onChange={handleChange}\r\n          placeholder=\"Тип операції\"\r\n          autoComplete=\"off\"\r\n        />\r\n        <input\r\n          name=\"amount\"\r\n          value={amount}\r\n          type=\"number\"\r\n          max=\"1000000\"\r\n          min=\"1\"\r\n          onChange={handleChange}\r\n          placeholder=\"00.00\"\r\n          pattern=\"\\d+(.\\d{2})?\"\r\n          autoComplete=\"off\"\r\n        />\r\n        <DatePicker\r\n          selected={datetime}\r\n          onChange={setDatetime}\r\n          dateFormat=\"dd.MM.yyyy\"\r\n          customInput={\r\n            <input type=\"text\"\r\n            />\r\n          }\r\n        />\r\n        <input type=\"text\"\r\n          name=\"description\"\r\n          value={description}\r\n          onChange={handleChange}\r\n          placeholder=\"Опис\"\r\n          autoComplete=\"off\"\r\n        />\r\n\r\n\r\n\r\n        <button className=\"btn\" type=\"submit\">\r\n          Додати\r\n        </button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddTransaction;\r\n","import React from 'react';\r\nimport AddTransaction from '../components/AddTransaction/AddTransaction';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <AddTransaction />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useCallback  } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  transactionsOperations,\r\n  transactionsSelectors,\r\n} from \"../../redux/transactions\";\r\n\r\n\r\nexport const CategoriesTable = () => {\r\n  const dispatch = useDispatch();\r\n\r\n   const transactions = useSelector(\r\n    transactionsSelectors.getAllTransactions\r\n  )\r\n\r\n\r\n  const onDeleteTransaction = useCallback(\r\n    id => dispatch(transactionsOperations.deleteTransaction(id)),\r\n    [dispatch],\r\n  );\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Назва</th>\r\n            <th>Опис</th>\r\n            <th>Дії</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {transactions.map(({ _id, category, description }) => (\r\n            <tr key={_id}>\r\n              <td>{category}</td>\r\n              <td>{description}</td>\r\n              <td>\r\n                <button type=\"button\"\r\n                  onClick={() => onDeleteTransaction(_id)}\r\n                >\r\n                  X\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default CategoriesTable;","import React from 'react';\r\nimport CategoriesTable from '../components/CategoriesTable/CategoriesTable';\r\n\r\nconst Categories = () => {\r\n  return (\r\n    <>\r\n      <CategoriesTable />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n","import React, { useCallback  } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\n\r\nimport {\r\n  transactionsOperations,\r\n  transactionsSelectors\r\n} from \"../../redux/transactions\";\r\n\r\n\r\nexport const TransactionsTable = () => {\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const transactions = useSelector(\r\n    transactionsSelectors.getAllTransactions\r\n  )\r\nconsole.log(transactions)\r\n\r\n  const onDeleteTransaction = useCallback(\r\n    id => dispatch(transactionsOperations.deleteTransaction(id)),\r\n    [dispatch],\r\n  );\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Категорiя</th>\r\n            <th>Тип операції</th>\r\n            <th>Сума</th>\r\n            <th>Дата</th>\r\n            <th>Опис</th>\r\n            <th>Дії</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {transactions.map(({ _id, category, operationType, amount, datetime, description }) => (\r\n            <tr key={_id}>\r\n              <td>{category}</td>\r\n              <td>{operationType}</td>\r\n              <td>{amount}</td>\r\n              <td>{moment(datetime).format(\"DD.MM.YYYY\")}</td>\r\n              <td>{description}</td>\r\n              <td>\r\n                <button type=\"button\"\r\n                  onClick={() => onDeleteTransaction(_id)}\r\n                >\r\n                  X\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default TransactionsTable;","// import React from 'react';\r\nimport TransactionsTable from '../components/TransactionsTable/TransactionsTable';\r\n\r\nconst Transactions = () => {\r\n  return (\r\n    <>\r\n      <TransactionsTable />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Transactions;\r\n","const routes = {\r\n  home: '/',\r\n  categories: '/categories',\r\n  category: '/category/:categoryId',\r\n  transactions: '/transactions',\r\n  transaction: '/transaction/:transactionId',\r\n};\r\n\r\nexport default routes;\r\n","import React from 'react';\r\nimport { NavLink, Route, Switch } from 'react-router-dom';\r\n\r\nimport HomeView from '../../views/HomeView'\r\nimport CategoriesView from '../../views/CategoriesView'\r\nimport TransactionsView from '../../views/TransactionsView'\r\n\r\nimport routes from '../routes';\r\n\r\nconst Nav = () => (\r\n\r\n    <>\r\n      <header>\r\n        <nav>\r\n          <NavLink className=\"nav_link\"\r\n          activeClassName=\"nav_link__active\"\r\n            exact\r\n            to={routes.home}\r\n          >\r\n            Home\r\n          </NavLink>\r\n\r\n          <NavLink className=\"nav_link\"\r\n          activeClassName=\"nav_link__active\"\r\n            exact\r\n            to={routes.categories}\r\n          >\r\n            Категорії\r\n          </NavLink>\r\n\r\n          <NavLink className=\"nav_link\"\r\n          activeClassName=\"nav_link__active\"\r\n            exact\r\n            to={routes.transactions}\r\n          >\r\n            Транзакції\r\n          </NavLink>\r\n        </nav>\r\n      </header>\r\n\r\n      <Switch>\r\n        <Route exact path={routes.home} component={HomeView} />\r\n        <Route  path={routes.categories} component={CategoriesView} />\r\n        <Route  path={routes.transactions} component={TransactionsView} />\r\n      </Switch>\r\n    </>\r\n)\r\nexport default Nav;\r\n","import React from 'react'\r\nimport Navigation from '../Nav/Nav'\r\n\r\nconst AppBar = () => {\r\n  return (\r\n    <header>\r\n      <Navigation />\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default AppBar;","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport AppBar from './components/AppBar/AppBar';\n\nimport { transactionsOperations } from './redux/transactions';\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(transactionsOperations.fetchTransactions());\n  }, [dispatch]);\n\n  return (\n    <>\n      <AppBar />\n    </>\n  );\n};\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { transactionsReducer } from './transactions/transactions.reducer';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    transactions: transactionsReducer,\r\n  },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport { store } from './redux/store';\n\nimport './base/sass/main.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}